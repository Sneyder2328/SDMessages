apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'io.fabric'

apply plugin: 'kotlin-kapt'

repositories {
  mavenCentral()
  maven { url 'https://maven.fabric.io/public' }
}

buildscript {
  repositories {
    mavenCentral()
    maven { url 'https://jitpack.io' }
    maven { url 'https://maven.fabric.io/public' }
  }
  dependencies {
    classpath 'io.fabric.tools:gradle:1.25.1'
  }
}

kotlin {
  experimental {
    coroutines "enable"
  }
}

android {
  /*
  * By default JUnit unit tests generate both HTML and XML reports every time you execute your app unit tests,
  * in order to disable simply set these flags to false.
  */
  testOptions.unitTests.all {
    reports.html.enabled = false
    reports.junitXml.enabled = false
  }
  signingConfigs {
    release {
      keyAlias 'SDMessagesApp'
      keyPassword 'abwtswegaxjwe'
      storeFile file('C:/Users/sneyd/Documents/sneyder/sneyderapps.jks')
      storePassword 'abwtswegaxjwe'
    }
  }
  compileSdkVersion 27
  defaultConfig {
    applicationId "com.sneyder.sdmessages"
    minSdkVersion 15
    targetSdkVersion 27
    versionCode 1
    versionName "1.0"
    testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    multiDexEnabled = true
    externalNativeBuild {
      cmake {
        cppFlags ""
      }
    }
    vectorDrawables.useSupportLibrary = true
    javaCompileOptions {
      annotationProcessorOptions {
        // Good practice to save room database schemes
        arguments = ["room.schemaLocation": "$projectDir/schemas".toString()]
      }
    }
  }
  buildTypes {
    debug {
      minifyEnabled false
      useProguard false
      versionNameSuffix '-DEBUG'
    }
    release {
      shrinkResources true
      minifyEnabled true
      proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
      signingConfig signingConfigs.release
    }
  }
  externalNativeBuild {
    cmake {
      path "CMakeLists.txt"
    }
  }
  androidExtensions {
    experimental = true
  }
  // Test Android jar comes with unimplemented methods that throw exceptions by default. This
  // option forces the methods to return default values instead. Required for static methods,
  // such as TextUtils, as those cannot be mocked with Mockito.
  // Refer http://tools.android.com/tech-docs/unit-testing-support#TOC-Method-...-not-mocked.-
  testOptions {
    unitTests.returnDefaultValues = true
  }
  packagingOptions {
    exclude 'META-INF/rxjava.properties'
  }
  sourceSets {
    debug.java.srcDirs += 'src/debug/java'
    androidTest.java.srcDirs += "src/androidTest/java"
    test.java.srcDirs += "src/commonTest/java"
    release.java.srcDirs += 'src/release/java'
  }
}

dependencies {
  implementation fileTree(dir: 'libs', include: ['*.jar'])

  // Kotlin
  implementation deps.kotlin_stdlib
  implementation deps.coroutines_core
  implementation deps.coroutines_android

  // Kotlin Android extensions
  implementation deps.android_ktx

  // Support library
  implementation deps.app_compat
  implementation deps.design
  implementation deps.recyclerview
  implementation deps.exifinterface
  implementation deps.multidex
  implementation deps.cardview
  implementation deps.constraint_layout
  implementation deps.support_v4
  implementation deps.vector_drawable

  // AWS
  implementation(deps.aws_mobile_client) { transitive = true }
  implementation deps.aws_s3
  implementation deps.aws_cognito

  // Facebook login SDK
  implementation deps.facebook

  // Retrofit 2
  implementation deps.retrofit2
  implementation deps.converter_gson
  implementation deps.adapter_rxjava2

  // Architecture components (Lifecycles, LiveData, and ViewModel)
  implementation deps.lifecycle_runtime
  implementation deps.lifecycle_extensions
  kapt deps.lifecycle_compiler

  // Room
  implementation deps.room_runtime
  kapt deps.room_compiler
  // Room RxJava2 support
  implementation deps.room_rxjava2

  // Gson
  implementation deps.gson

  // rxJava2, rxAndroid2 and rxKotlin
  implementation deps.rxjava
  implementation deps.rxandroid
  implementation deps.rxkotlin

  // Dagger
  implementation deps.dagger
  implementation deps.dagger_android_support
  kapt deps.dagger_compiler
  kapt deps.dagger_android_processor

  // Timber(logger)
  implementation deps.timber

  // Picasso
  implementation deps.picasso

  // Leak Canary
  debugImplementation deps.leakcanary
  releaseImplementation deps.leakcanary_no_op

  // Fabric crashlytics
  releaseImplementation(deps.crashlytics) { transitive = true }

  // Google Play Services Auth
  implementation deps.play_services_auth
  implementation deps.firebase_core

  // Firebase messaging service
  implementation deps.firebase_messaging

  // Android-Job
  implementation deps.android_job
  // It's useful(and optional) so that Android-Job uses GcmNetworkManager on Android 4
  implementation deps.play_services_gcm

  implementation deps.fotoapparat

  // Test dependencies
  testImplementation deps.junit
  androidTestImplementation deps.test_runner
  testImplementation deps.mockito_kotlin
  testAnnotationProcessor deps.dagger_compiler
  testImplementation(deps.arch_core_testing, {
    exclude group: 'com.android.support', module: 'support-compat'
    exclude group: 'com.android.support', module: 'support-annotations'
    exclude group: 'com.android.support', module: 'support-core-utils'
  })
  // RxJava/OkHttp localhost server testing
  testImplementation deps.mockwebserver

  // Espresso UI Testing
  androidTestImplementation deps.espresso_core
  androidTestImplementation deps.espresso_intents
  androidTestImplementation deps.espresso_idling_concurrent
  implementation deps.espresso_idling_resource
  androidTestImplementation(deps.espresso_contrib){
    exclude group: 'com.android.support', module: 'support-annotations'
    exclude group: 'com.android.support', module: 'support-v4'
    exclude group: 'com.android.support', module: 'design'
    exclude group: 'com.android.support', module: 'recyclerview-v7'
  }
  androidTestAnnotationProcessor deps.dagger_compiler
}

apply plugin: 'com.google.gms.google-services'